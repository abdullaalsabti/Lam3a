// <auto-generated />
using System;
using Lam3a.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lam3a.Migrations
{
    [DbContext(typeof(DataContextEf))]
    [Migration("20250928141217_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Lam3a.Data.Entities.Notification", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.HasKey("UserId");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("Lam3a.Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstimatedTime")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Services", (string)null);
                });

            modelBuilder.Entity("Lam3a.Data.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Lam3a.Data.Entities.Vehicle", b =>
                {
                    b.Property<string>("PlateNumber")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PlateNumber");

                    b.ToTable("Vehicle", (string)null);
                });

            modelBuilder.Entity("Lam3a.Data.ValueObjects.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Landmark")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("AddressId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("Lam3a.Data.ValueObjects.Schedule", b =>
                {
                    b.Property<Guid>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ServiceProviderId")
                        .HasColumnType("uuid");

                    b.HasKey("ScheduleId");

                    b.HasIndex("ServiceProviderId");

                    b.ToTable("Schedules", (string)null);
                });

            modelBuilder.Entity("Lam3a.Data.Entities.Client", b =>
                {
                    b.HasBaseType("Lam3a.Data.Entities.User");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("Lam3a.Data.Entities.ServiceProvider", b =>
                {
                    b.HasBaseType("Lam3a.Data.Entities.User");

                    b.Property<bool>("Availability")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.ToTable("ServiceProviders", (string)null);
                });

            modelBuilder.Entity("Lam3a.Data.ValueObjects.Address", b =>
                {
                    b.HasOne("Lam3a.Data.Entities.User", "User")
                        .WithOne("Address")
                        .HasForeignKey("Lam3a.Data.ValueObjects.Address", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Lam3a.Data.ValueObjects.Coordinates", "MapCoordinates", b1 =>
                        {
                            b1.Property<Guid>("AddressId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("numeric");

                            b1.HasKey("AddressId");

                            b1.ToTable("Addresses");

                            b1.WithOwner()
                                .HasForeignKey("AddressId");
                        });

                    b.Navigation("MapCoordinates")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lam3a.Data.ValueObjects.Schedule", b =>
                {
                    b.HasOne("Lam3a.Data.Entities.ServiceProvider", "ServiceProvider")
                        .WithMany("Schedules")
                        .HasForeignKey("ServiceProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Lam3a.Data.ValueObjects.TimeRange", "TimeRange", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.Property<TimeSpan>("End")
                                .HasColumnType("interval");

                            b1.Property<TimeSpan>("Start")
                                .HasColumnType("interval");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");
                        });

                    b.Navigation("ServiceProvider");

                    b.Navigation("TimeRange")
                        .IsRequired();
                });

            modelBuilder.Entity("Lam3a.Data.Entities.Client", b =>
                {
                    b.HasOne("Lam3a.Data.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Lam3a.Data.Entities.Client", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lam3a.Data.Entities.ServiceProvider", b =>
                {
                    b.HasOne("Lam3a.Data.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Lam3a.Data.Entities.ServiceProvider", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lam3a.Data.Entities.User", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("Lam3a.Data.Entities.ServiceProvider", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
